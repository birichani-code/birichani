{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let SplitPipe = /*#__PURE__*/(() => {\n  class SplitPipe {\n    transform(value, ...args) {\n      if (!value) {\n        return;\n      }\n      return value.split(\" .\");\n    }\n  }\n  SplitPipe.ɵfac = function SplitPipe_Factory(t) {\n    return new (t || SplitPipe)();\n  };\n  SplitPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"split\",\n    type: SplitPipe,\n    pure: true\n  });\n  return SplitPipe;\n})();","map":{"version":3,"mappings":";AAKA,WAAaA,SAAS;EAAhB,MAAOA,SAAS;IAEpBC,SAAS,CAACC,KAAU,EAAE,GAAGC,IAAW;MAEhC,IAAG,CAACD,KAAK,EAAE;QACT;;MAEF,OAAOA,KAAK,CAACE,KAAK,CAAC,IAAI,CAAC;IAC1B;;;qBARSJ,SAAS;EAAA;;;UAATA,SAAS;IAAAK;EAAA;EAAA,OAATL,SAAS;AAAA","names":["SplitPipe","transform","value","args","split","pure"],"sourceRoot":"","sources":["/home/solomon/Desktop/codes/birichani/src/app/profile/split.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'split'\n})\nexport class SplitPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n   \n      if(!value) {\n        return;\n      }\n      return value.split(\" .\");\n    }\n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}